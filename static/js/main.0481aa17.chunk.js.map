{"version":3,"sources":["assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","global_style.ts","components/ErrorBoundary.jsx","components/Link.js","utils/notifications.tsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","utils/referrer.tsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","utils/preferences.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","charting_library/charting_library.esm.js","components/TradingView/saveLoadAdapter.tsx","components/TradingView/index.tsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","includes","split","length","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","map","refreshIntervalsOnError","x","previousRefreshInterval","add","assert","delete","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","initializeOnly","setCache","currentItem","previousInfoRef","useRef","current","useAccountData","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","props","error","Component","Link","external","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","createTokenAccountTransaction","wallet","mintPublicKey","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","ata","transaction","Transaction","createAssociatedTokenAccountInstruction","newAccountPubkey","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","sendNotification","usdcRef","usdtRef","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","isZero","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","signer","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","owner","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","fromPubkey","space","createAccount","initializeAccount","account","mint","tx2","Market","getLayout","span","DexInstructions","initializeMarket","authority","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","signTransaction","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","signAllTransactions","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","parsedErrorInfo","parseInstructionErrorResponse","parsedError","reject","onSignature","e","removeSignatureListener","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","getProgramAccounts","resp","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useMintInfos","useTokenAccounts","useAllMarkets","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","MARKETS","USE_MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","useWallet","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","baseLabel","quoteCurrency","quoteLabel","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","then","catch","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","connected","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","useInterval","delay","savedCallback","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","ReferrerContext","USDC_MINT","USDT_MINT","findAssociatedTokenAddress","walletAddress","tokenMintAddress","findProgramAddress","SOL_TLD_AUTHORITY","getInputKey","input","getHashedName","hashed_input_name","getNameAccountKey","inputDomainKey","hashedInputName","ReferrerProvider","allowRefLink","process","REACT_APP_ALLOW_REF_LINK","refCode","setRefCode","setUsdc","setUsdt","usdcAddress","usdtAddress","REACT_APP_USDC_REFERRAL_FEES_ADDRESS","REACT_APP_USDT_REFERRAL_FEES_ADDRESS","replace","NameRegistryState","retrieve","nameRegistryState","getTwitterRegistry","usdcAccountInfo","usdtAccountInfo","useFeesAccountsFromRefCode","useReferrer","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","adapter","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","providerName","providerUrl","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","shorten","LinkOutlined","cursor","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketInfoList","currentlyFetchingMarkets","setCurrentlyFetchingMarkets","setMarkets","addToMarketsMap","marketId","prev","autoSettle","autoApprove","fetchMarkets","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","lastSettledAt","setLastSettledAt","now","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","url","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","n","o","isArray","mobile","disabled_features","enabled_features","interval","timezone","container","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","substring","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","bind","datafeed","_options","preset","theme","loading_screen","_create","call","_innerWindowLoaded","_innerWindow","headerReady","_doWhenInnerApiLoaded","onGrayedObjectClicked","_doWhenInnerWindowLoaded","createShortcutAction","subscribe","unsubscribe","_innerAPI","chart","changeSymbol","window","removeEventListener","splice","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","saveChart","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","createDropdown","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","getStudyInputs","addCustomCSSFile","applyOverrides","applyStudiesOverrides","news","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","clearUndoHistory","undo","redo","startFullscreen","exitFullscreen","takeClientScreenshot","getNavigationButtonsVisibility","getPaneButtonsVisibility","getDateFormat","tradingViewApi","contentWindow","doWhenApiIsReady","innerHeight","_render","container_id","getElementById","innerHTML","querySelector","addEventListener","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","additionalSymbolInfoFields","additional_symbol_info_fields","headerWidgetButtonsMode","header_widget_buttons_mode","customTranslateFunction","custom_translate_function","symbolSearchComplete","symbol_search_complete","contextMenu","context_menu","settingsOverrides","settings_overrides","saved_data","chartContent","saved_data_meta_info","chartContentExtendedData","symbol","encodeURIComponent","timeframe","toolbar_bg","studies_access","drawings_access","String","charts_storage_url","custom_css_url","custom_font_family","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","time_scale","TradingView","version","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chartData","timestamp","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageApiVersion","clientId","userId","datafeedUrl","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","hasOwnProperty","recurse","newKey","flatten","widgetOptions","Datafeeds","UDFCompatibleDatafeed","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","onChartReady","className","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","REACT_APP_EXCLUDE_MARKETS","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","componentProps","onChangeOrderRef","component","customMarket","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","option","toLowerCase","nanoid","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","WalletConnect","connect","disconnect","select","wallets","isModalVisible","setIsModalVisible","publicKeyString","menu","Item","v","overlay","alt","src","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","tags","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","tag","matchApp","onClear","open","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","tradePageUrl","pathname","handleError","getBlockTime","newCustomEndpoints","mode","selectedKeys","borderBottom","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","search","parsed","queryString","useMintInput","tooltip","setAddress","ticker","validateStatus","hasFeedback","help","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","every","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","AppImpl","network","SolletWalletAdapter","SolletExtensionWalletAdapter","LedgerWalletAdapter","SolflareWalletAdapter","PhantomWalletAdapter","MathWalletAdapter","WalletProvider","autoConnect","fallback","App","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0481aa17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d8639cc2.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key]?.forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(obj, { prefix = '', restrictTo }) {\n  let restrict = restrictTo;\n  if (restrict) {\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\n  }\n  const result = {};\n  (function recurse(obj, current, keys) {\n    (keys || Object.keys(obj)).forEach((key) => {\n      const value = obj[key];\n      const newKey = current ? current + '.' + key : key; // joined key with dot\n      if (value && typeof value === 'object') {\n        // @ts-ignore\n        recurse(value, newKey); // nested object\n      } else {\n        result[newKey] = value;\n      }\n    });\n  })(obj, prefix, restrict);\n  return result;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n\nexport function getCache(cacheKey: any) {\n  return globalCache.get(cacheKey);\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'onespace-mainnet-beta',\n    endpoint: 'https://solana-api.syndica.io/access-token/d3KZa1fg1Eyg9QAu9nVxRj6ohfqr2WHcfCa6ghPsenrCJoJrgwSxocLYOfyNQkyt/rpc',\n    custom: false,\n  },\n  {\n    name: 'public mainnet-beta',\n    endpoint: 'https://api.mainnet-beta.solana.com',\n    custom: false,\n  },\n  //{ name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\n  null,\n);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: #11161D;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #5ab7f7;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #5ab7f7;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #5ab7f7; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #14161d;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #111318\n  }\n  .ant-table {\n    background: #111318;\n  }\n  .ant-table-thead > tr > th {\n    background: #14161d;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #14161d;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #5ab7f7;}\n  to {background-color: #14161d;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #5ab7f7;}\n  to {background-color: #14161d;}\n}\n@-keyframes highlight {\n  from { background-color: #5ab7f7;}\n  to {background-color: #14161d;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomLeft',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://solscan.io/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport {\n  Token,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  parseInstructionErrorResponse,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\nimport {\n  BaseSignerWalletAdapter,\n  WalletAdapter,\n} from '@solana/wallet-adapter-base';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  newAccountPubkey: PublicKey;\n}> {\n  assert(wallet.publicKey, 'Expected `publicKey` to be non-null');\n  const ata = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mintPublicKey,\n    wallet.publicKey,\n  );\n  const transaction = new Transaction();\n  transaction.add(\n    Token.createAssociatedTokenAccountInstruction(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      mintPublicKey,\n      ata,\n      wallet.publicKey,\n      wallet.publicKey,\n    ),\n  );\n  return {\n    transaction,\n    newAccountPubkey: ata,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  sendNotification = true,\n  usdcRef = undefined,\n  usdtRef = undefined,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: BaseSignerWalletAdapter;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n  sendNotification?: boolean;\n  usdcRef?: PublicKey;\n  usdtRef?: PublicKey;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    if (sendNotification) {\n      notify({ message: 'Not connected' });\n    }\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\n    if (usdtRef && usdt && market.quoteMintAddress.equals(usdt.address)) {\n      referrerQuoteWallet = usdtRef;\n    } else if (\n      usdcRef &&\n      usdc &&\n      market.quoteMintAddress.equals(usdc.address)\n    ) {\n      referrerQuoteWallet = usdcRef;\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n\n  return await sendTransaction({\n    transaction,\n    signers: settleFundsSigners,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n    sendNotification,\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: BaseSignerWalletAdapter;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    assert(wallet.publicKey, 'Expected `publicKey` to be non-null');\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        if (\n          openOrdersAccount.baseTokenFree.isZero() &&\n          openOrdersAccount.quoteTokenFree.isZero()\n        ) {\n          // nothing to settle for this market.\n          return null;\n        }\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n            selectedTokenAccounts &&\n            selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: BaseSignerWalletAdapter;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: BaseSignerWalletAdapter;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  assert(wallet.publicKey, 'Expected `publicKey` to be non-null');\n  const publicKey = wallet.publicKey;\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: BaseSignerWalletAdapter;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: BaseSignerWalletAdapter;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  assert(wallet.publicKey, 'Expected `publicKey` to be non-null');\n\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n      authority: undefined,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n  sendNotification = true,\n}: {\n  transaction: Transaction;\n  wallet: BaseSignerWalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n  sendNotification?: boolean;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n    sendNotification,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: BaseSignerWalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  assert(wallet.publicKey, 'Expected `publicKey` to be non-null');\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: BaseSignerWalletAdapter;\n  connection: Connection;\n}) {\n  assert(wallet.publicKey, 'Expected `publicKey` to be non-null');\n  const publicKey = wallet.publicKey;\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(publicKey, ...signers.map((s) => s.publicKey));\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n  sendNotification = true,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n  sendNotification?: boolean;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  if (sendNotification) {\n    notify({ message: sendingMessage });\n  }\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  if (sendNotification) {\n    notify({ message: sentMessage, type: 'success', txid });\n  }\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      let parsedError;\n      if (\n        typeof simulateResult.err == 'object' &&\n        'InstructionError' in simulateResult.err\n      ) {\n        const parsedErrorInfo = parseInstructionErrorResponse(\n          signedTransaction,\n          simulateResult.err['InstructionError'],\n        );\n        parsedError = parsedErrorInfo.error;\n      } else {\n        parsedError = JSON.stringify(simulateResult.err);\n      }\n      throw new Error(parsedError);\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  if (sendNotification) {\n    notify({ message: successMessage, type: 'success', txid });\n  }\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      let subscriptionId;\n      try {\n        subscriptionId = connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      if (subscriptionId)\n        await connection.removeSignatureListener(subscriptionId);\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n        publicKeys.map((k) => k.toBase58()).join(', ') +\n        ': ' +\n        res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { TokenAccount } from './types';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\nimport { getMultipleSolanaAccounts } from './send';\nimport { useConnection } from './connection';\nimport { useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport BN from 'bn.js';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(\n  data: Buffer,\n): { mint: PublicKey; owner: PublicKey; amount: number } {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection.getProgramAccounts(TOKEN_PROGRAM_ID, {\n    filters,\n  });\n  return resp.map(\n    ({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data,\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }),\n  );\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\n// todo: use this to map custom mints to custom tickers. Add functionality once custom markets store mints\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  return useMemo(() => {\n    return Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// todo: move this to using mints stored in static market infos once custom markets support that.\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n","import { BonfidaTrade } from './types';\n\nexport default class BonfidaApi {\n  static URL: string = 'https://dry-ravine-67635.herokuapp.com/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<BonfidaTrade[] | null> {\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\n  }\n}\n\nexport const BONFIDA_DATA_FEED = 'https://dry-ravine-67635.herokuapp.com/tv';\n","import {\n  Market,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  sleep,\n  useLocalStorageState,\n} from './utils';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport tuple from 'immutable-tuple';\nimport { notify } from './notifications';\nimport BN from 'bn.js';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  useMintInfos,\n} from './tokens';\nimport {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n} from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { Order } from '@project-serum/serum/lib/market';\nimport BonfidaApi from './bonfidaConnector';\n\nimport MARKETS_RAW from '../data/markets.json';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst MARKETS: MarketInfo[] = MARKETS_RAW.map((m) => {\n  return {\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n  };\n});\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(\n    ({ name, deprecated }) =>\n      !deprecated && !process.env.REACT_APP_EXCLUDE_MARKETS?.includes(name),\n  );\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { publicKey } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!connection || !publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(\n          ({ deprecated }) => deprecated,\n        ).map(({ programId }) => programId.toBase58()),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\n  null,\n);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET_NAME = 'SOL/USDC';\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === DEFAULT_MARKET_NAME && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo && marketInfo.deprecated) {\n      console.log('Switching markets from deprecated', marketInfo);\n      if (DEFAULT_MARKET) {\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [market, setMarket] = useState<Market | null>();\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress = marketAddress || DEFAULT_MARKET?.address.toBase58() || '';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useBonfidaTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getBonfidaTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await BonfidaApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getBonfidaTrades,\n    tuple('getBonfidaTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, publicKey, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected || !publicKey || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(connection, publicKey);\n  }\n  return useAsyncData<OpenOrders[] | null>(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, publicKey, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected || !publicKey || !wallet) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [\n    storedFeeDiscountKey,\n    setStoredFeeDiscountKey,\n  ] = useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, publicKey, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected || !publicKey || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { connected, publicKey } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected || !publicKey) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [\n    openOrdersAccounts,\n    loadedOpenOrdersAccounts,\n  ] = useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, publicKey } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected && publicKey) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connection, connected, refresh, publicKey]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, publicKey, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected || !publicKey) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets.map((m) => ({\n    ...m,\n    address: new PublicKey(m.address),\n    programId: new PublicKey(m.programId),\n    deprecated: false,\n  }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n\nexport function useCurrentlyAutoSettling(): [\n  boolean,\n  (currentlyAutoSettling: boolean) => void,\n] {\n  const [currentlyAutoSettling, setCurrentlyAutosettling] = useState<boolean>(\n    false,\n  );\n  return [currentlyAutoSettling, setCurrentlyAutosettling];\n}\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 5px;\n  padding: 20px;\n  background-color: #14161d;\n`;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 20px 0 14px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\n      }\n    >\n      <Title>Orderbook</Title>\n      <SizeTitle>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'sell'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n      <MarkPriceComponent markPrice={markPrice} />\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\n        <Col span={12} style={{ textAlign: 'left' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle justify=\"center\">\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useConnection } from './connection';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  NameRegistryState,\n  getHashedName,\n  getNameAccountKey,\n  getTwitterRegistry,\n} from '@solana/spl-name-service';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { useLocalStorageState } from './utils';\n\ninterface ReferrerContextValues {\n  usdcRef: PublicKey | undefined;\n  usdtRef: PublicKey | undefined;\n  setRefCode: (arg: any) => void;\n  refCode: string | undefined;\n  allowRefLink: boolean;\n}\n\nconst ReferrerContext: React.Context<null | ReferrerContextValues> = React.createContext<null | ReferrerContextValues>(\n  null,\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst USDC_MINT = new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');\nconst USDT_MINT = new PublicKey('Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB');\n\nexport async function findAssociatedTokenAddress(\n  walletAddress: PublicKey,\n  tokenMintAddress: PublicKey,\n): Promise<PublicKey> {\n  return (\n    await PublicKey.findProgramAddress(\n      [\n        walletAddress.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        tokenMintAddress.toBuffer(),\n      ],\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n    )\n  )[0];\n}\n\n// Address of the SOL TLD\nexport const SOL_TLD_AUTHORITY = new PublicKey(\n  '58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx',\n);\n\nexport const getInputKey = async (input: string) => {\n  let hashed_input_name = await getHashedName(input);\n  let inputDomainKey = await getNameAccountKey(\n    hashed_input_name,\n    undefined,\n    SOL_TLD_AUTHORITY,\n  );\n  return { inputDomainKey: inputDomainKey, hashedInputName: hashed_input_name };\n};\n\nexport const useFeesAccountsFromRefCode = (refCode: string | undefined) => {\n  const connection = useConnection();\n  const [usdc, setUsdc] = useState<PublicKey | undefined>(undefined);\n  const [usdt, setUsdt] = useState<PublicKey | undefined>(undefined);\n\n  useEffect(() => {\n    const fn = async () => {\n      let usdcAddress: undefined | PublicKey = undefined;\n      let usdtAddress: undefined | PublicKey = undefined;\n      if (!refCode) {\n        setUsdc(\n          process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS\n            ? new PublicKey(process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS)\n            : undefined,\n        );\n        setUsdt(\n          process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS\n            ? new PublicKey(process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS)\n            : undefined,\n        );\n        return;\n      }\n      try {\n        let nameRegistryState: NameRegistryState;\n        if (refCode.includes('.sol')) {\n          const { inputDomainKey } = await getInputKey(\n            refCode.replace('.sol', ''),\n          );\n          nameRegistryState = await NameRegistryState.retrieve(\n            connection,\n            inputDomainKey,\n          );\n        } else {\n          nameRegistryState = await getTwitterRegistry(connection, refCode);\n        }\n        usdcAddress = await findAssociatedTokenAddress(\n          nameRegistryState.owner,\n          USDC_MINT,\n        );\n        usdtAddress = await findAssociatedTokenAddress(\n          nameRegistryState.owner,\n          USDT_MINT,\n        );\n        const usdcAccountInfo = await connection.getAccountInfo(usdcAddress);\n        const usdtAccountInfo = await connection.getAccountInfo(usdtAddress);\n        if (!!usdcAccountInfo?.data) setUsdc(usdcAddress);\n        if (!!usdtAccountInfo?.data) setUsdt(usdtAddress);\n      } catch (err) {\n        console.warn(`Error getting refcode ${err}`);\n      }\n    };\n    fn();\n  }, [connection, refCode]);\n  return { usdcRef: usdc, usdtRef: usdt };\n};\n\nexport const ReferrerProvider = ({ children }) => {\n  const allowRefLink = process.env.REACT_APP_ALLOW_REF_LINK === 'true';\n  const [refCode, setRefCode] = useLocalStorageState('refCode');\n  const { usdcRef, usdtRef } = useFeesAccountsFromRefCode(\n    allowRefLink ? refCode : undefined,\n  );\n  useEffect(() => {\n    if (!allowRefLink) setRefCode(null);\n  }, [allowRefLink, setRefCode]);\n  return (\n    <ReferrerContext.Provider\n      value={{ usdcRef, usdtRef, setRefCode, refCode, allowRefLink }}\n    >\n      {children}\n    </ReferrerContext.Provider>\n  );\n};\n\nexport const useReferrer = () => {\n  const context = useContext(ReferrerContext);\n  if (!context) throw new Error('Missing referrer context');\n  return {\n    usdcRef: context.usdcRef,\n    usdtRef: context.usdtRef,\n    setRefCode: context.setRefCode,\n    refCode: context.refCode,\n    allowRefLink: context.allowRefLink,\n  };\n};\n","import { Button } from 'antd';\nimport React from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useReferrer } from '../../utils/referrer';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n  const { usdcRef, usdtRef } = useReferrer();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n\n  const columns = [\n    showMarket\n      ? {\n          title: 'Market',\n          dataIndex: 'marketName',\n          key: 'marketName',\n        }\n      : null,\n    {\n      title: 'Coin',\n      dataIndex: 'coin',\n      key: 'coin',\n    },\n    hideWalletBalance\n      ? null\n      : {\n          title: 'Wallet Balance',\n          dataIndex: 'wallet',\n          key: 'wallet',\n        },\n    {\n      title: 'Orders',\n      dataIndex: 'orders',\n      key: 'orders',\n    },\n    {\n      title: 'Unsettled',\n      dataIndex: 'unsettled',\n      key: 'unsettled',\n    },\n    {\n      key: 'action',\n      render: ({ market, openOrders, marketName }) => (\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            ghost\n            style={{ marginRight: 12 }}\n            onClick={() => onSettleFunds(market, openOrders)}\n          >\n            Settle {marketName}\n          </Button>\n        </div>\n      ),\n    },\n  ].filter((x) => x);\n  return (\n    <DataTable\n      emptyLabel=\"No balances\"\n      dataSource={balances}\n      columns={columns}\n      pagination={false}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Tag } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: `Size`,\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: `Liquidity`,\n      dataIndex: 'liquidity',\n      key: 'liquidity',\n    },\n    {\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\n      dataIndex: 'feeCost',\n      key: 'feeCost',\n    },\n  ];\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No fills\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React from 'react';\nimport { Tabs, Typography } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nexport default function Index() {\n  const { market } = useMarket();\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\n      <Typography>\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\n          Make sure to go to Balances and click Settle to send out your funds.\n        </Paragraph>\n      </Typography>\n      <Tabs defaultActiveKey=\"orders\">\n        <TabPane tab=\"Open Orders\" key=\"orders\">\n          <OpenOrdersTab />\n        </TabPane>\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\n          <FillsTable />\n        </TabPane>\n        <TabPane tab=\"Balances\" key=\"balances\">\n          <BalancesTab />\n        </TabPane>\n        {market && market.supportsSrmFeeDiscounts ? (\n          <TabPane tab=\"\" key=\"fees\">\n            <FeesTable />\n          </TabPane>\n        ) : null}\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n  shorten = false,\n}: {\n  title?: undefined | any;\n  address: string;\n  shorten?: boolean;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://solscan.io/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ cursor: 'pointer' }}\n      >\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\n      </Button>\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { sleep, useLocalStorageState } from './utils';\nimport { useInterval } from './useInterval';\nimport { useConnection } from './connection';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useMarketInfos, useTokenAccounts } from './markets';\nimport { settleAllFunds } from './send';\nimport { PreferencesContextValues } from './types';\nimport { Market } from '@project-serum/serum';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\n\nexport const AUTO_SETTLE_DISABLED_OVERRIDE = true;\n\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\n  null,\n);\n\nexport function PreferencesProvider({ children }) {\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\n    'autoSettleEnabled',\n    true,\n  );\n\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected, wallet } = useWallet();\n  const marketInfoList = useMarketInfos();\n  const [\n    currentlyFetchingMarkets,\n    setCurrentlyFetchingMarkets,\n  ] = useState<boolean>(false);\n  const [markets, setMarkets] = useState<Map<string, Market>>(new Map());\n  const addToMarketsMap = (marketId, market) => {\n    setMarkets((prev) => new Map(prev).set(marketId, market));\n  };\n  const connection = useConnection();\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      if (AUTO_SETTLE_DISABLED_OVERRIDE) {\n        return;\n      }\n      if (!wallet) {\n        return;\n      }\n      try {\n        console.log('Settling funds...');\n        await settleAllFunds({\n          connection,\n          wallet: wallet.adapter as BaseSignerWalletAdapter,\n          tokenAccounts: tokenAccounts || [],\n          markets: [...markets.values()],\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n      console.log('Finished settling funds.');\n    };\n    connected &&\n      (wallet?.adapter as any).autoApprove &&\n      autoSettleEnabled &&\n      autoSettle();\n  }, 20000);\n\n  // warms up the market and open orders cache for auto-settlement\n  useInterval(() => {\n    const fetchMarkets = async () => {\n      if (!wallet) {\n        // only need these markets for auto-settlement, so don't fetch unless we are connected.\n        return;\n      }\n      setCurrentlyFetchingMarkets(true);\n      for (const marketInfo of marketInfoList) {\n        if (markets.has(marketInfo.address.toString())) {\n          continue;\n        }\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          addToMarketsMap(marketInfo.address.toString(), market);\n          await sleep(1000);\n        } catch (e) {\n          console.log('Error fetching market: ' + e.message);\n        }\n      }\n      setCurrentlyFetchingMarkets(false);\n    };\n    connected &&\n      (wallet?.adapter as any).autoApprove &&\n      autoSettleEnabled &&\n      !currentlyFetchingMarkets &&\n      fetchMarkets();\n  }, 60000);\n\n  return (\n    <PreferencesContext.Provider\n      value={{\n        autoSettleEnabled,\n        setAutoSettleEnabled,\n      }}\n    >\n      {children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport function usePreferences() {\n  const context = useContext(PreferencesContext);\n  if (!context) {\n    throw new Error('Missing preferences context');\n  }\n  return {\n    autoSettleEnabled: context.autoSettleEnabled,\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\n  };\n}\n","import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { useInterval } from '../utils/useInterval';\nimport { useLocalStorageState } from '../utils/utils';\nimport { AUTO_SETTLE_DISABLED_OVERRIDE } from '../utils/preferences';\nimport { useReferrer } from '../utils/referrer';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #5ab7f7;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n  const [autoSettleEnabled] = useLocalStorageState('autoSettleEnabled', true);\n  const [lastSettledAt, setLastSettledAt] = useState<number>(0);\n  const { usdcRef, usdtRef } = useReferrer();\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      if (\n        AUTO_SETTLE_DISABLED_OVERRIDE ||\n        !wallet ||\n        !market ||\n        !openOrdersAccount ||\n        !baseCurrencyAccount ||\n        !quoteCurrencyAccount ||\n        !autoSettleEnabled\n      ) {\n        return;\n      }\n      if (\n        !baseCurrencyBalances?.unsettled &&\n        !quoteCurrencyBalances?.unsettled\n      ) {\n        return;\n      }\n      if (Date.now() - lastSettledAt < 15000) {\n        return;\n      }\n      try {\n        console.log('Settling funds...');\n        setLastSettledAt(Date.now());\n        await settleFunds({\n          market,\n          openOrders: openOrdersAccount,\n          connection,\n          wallet: wallet.adapter as BaseSignerWalletAdapter,\n          baseCurrencyAccount,\n          quoteCurrencyAccount,\n          usdcRef,\n          usdtRef,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n      console.log('Finished settling funds.');\n    };\n    connected &&\n      (wallet?.adapter as any).autoApprove &&\n      autoSettleEnabled &&\n      autoSettle();\n  }, 1000);\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#5ab7f7' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={wallet?.adapter.url}>\n                {wallet?.adapter.name}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","import { Button, Input, Radio, Slider, Switch } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  useFeeDiscountKeys,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useMarkPrice,\n  useSelectedBaseCurrencyAccount,\n  useSelectedBaseCurrencyBalances,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useSelectedQuoteCurrencyBalances,\n} from '../utils/markets';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { notify } from '../utils/notifications';\nimport {\n  floorToDecimal,\n  getDecimalCount,\n  roundToDecimal,\n} from '../utils/utils';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst SellButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #f23b69;\n  border-color: #f23b69;\n`;\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { connected, publicKey, wallet } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(sendConnection, publicKey);\n        await market?.findBestFeeDiscountKey(sendConnection, publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Radio.Group\n          onChange={(e) => setSide(e.target.value)}\n          value={side}\n          buttonStyle=\"solid\"\n          style={{\n            marginBottom: 8,\n            width: '100%',\n          }}\n        >\n          <Radio.Button\n            value=\"buy\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'buy' ? '#02bf76' : '',\n              borderColor: side === 'buy' ? '#02bf76' : '',\n            }}\n          >\n            BUY\n          </Radio.Button>\n          <Radio.Button\n            value=\"sell\"\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              background: side === 'sell' ? '#F23B69' : '',\n              borderColor: side === 'sell' ? '#F23B69' : '',\n            }}\n          >\n            SELL\n          </Radio.Button>\n        </Radio.Group>\n        <Input\n          style={{ textAlign: 'right', paddingBottom: 8 }}\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\n          suffix={\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n          }\n          value={price}\n          type=\"number\"\n          step={market?.tickSize || 1}\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\n        />\n        <Input.Group compact style={{ paddingBottom: 8 }}>\n          <Input\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n            }\n            value={baseSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\n          />\n          <Input\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\n            suffix={\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\n                {quoteCurrency}\n              </span>\n            }\n            value={quoteSize}\n            type=\"number\"\n            step={market?.minOrderSize || 1}\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\n          />\n        </Input.Group>\n        <Slider\n          value={sizeFraction}\n          tipFormatter={(value) => `${value}%`}\n          marks={sliderMarks}\n          onChange={onSliderChange}\n        />\n        <div style={{ paddingTop: 18 }}>\n          {'POST '}\n          <Switch\n            checked={postOnly}\n            onChange={postOnChange}\n            style={{ marginRight: 40 }}\n          />\n          {'IOC '}\n          <Switch checked={ioc} onChange={iocOnChange} />\n        </div>\n      </div>\n      {side === 'buy' ? (\n        <BuyButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Buy {baseCurrency}\n        </BuyButton>\n      ) : (\n        <SellButton\n          disabled={!price || !baseSize}\n          onClick={onSubmit}\n          block\n          type=\"primary\"\n          size=\"large\"\n          loading={submitting}\n        >\n          Sell {baseCurrency}\n        </SellButton>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { BonfidaTrade } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useBonfidaTrades();\n\n  return (\n    <FloatingElement\n      style={\n        smallScreen\n          ? { flex: 1 }\n          : {\n              marginTop: '10px',\n              minHeight: '270px',\n              maxHeight: 'calc(100vh - 700px)',\n            }\n      }\n    >\n      <Title>Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right' }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-20px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            maxHeight: smallScreen\n              ? 'calc(100% - 75px)'\n              : 'calc(100vh - 800px)',\n          }}\n        >\n          {trades.map((trade: BonfidaTrade, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right' }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const {\n    openOrders,\n    loaded,\n    refreshOpenOrders,\n  } = useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate new markets\n      </Title>\n      <Typography>\n        Markets on older versions of the DEX or using Wrapped USDT are now\n        deprecated. To migrate over to the new markets, please cancel your\n        orders and settle your funds on old markets. To convert from Wrapped\n        USDT to Native USDT use sollet.io.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","/* eslint-disable */\nfunction e(t, i) {\n  const n = { ...t };\n  for (const o in i)\n    'object' != typeof t[o] || null === t[o] || Array.isArray(t[o])\n      ? void 0 !== i[o] && (n[o] = i[o])\n      : (n[o] = e(t[o], i[o]));\n  return n;\n}\nconst t = {\n    mobile: {\n      disabled_features: [\n        'left_toolbar',\n        'header_widget',\n        'timeframes_toolbar',\n        'edit_buttons_in_legend',\n        'context_menus',\n        'control_bar',\n        'border_around_the_chart',\n      ],\n      enabled_features: [],\n    },\n  },\n  i = {\n    width: 800,\n    height: 500,\n    interval: '1D',\n    timezone: 'Etc/UTC',\n    container: '',\n    library_path: '',\n    locale: 'en',\n    widgetbar: {\n      details: !1,\n      watchlist: !1,\n      watchlist_settings: { default_symbols: [] },\n    },\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\n    studies_overrides: {},\n    trading_customization: { position: {}, order: {} },\n    brokerConfig: { configFlags: {} },\n    fullscreen: !1,\n    autosize: !1,\n    disabled_features: [],\n    enabled_features: [],\n    debug: !1,\n    logo: {},\n    time_frames: [\n      { text: '5y', resolution: '1W' },\n      { text: '1y', resolution: '1W' },\n      { text: '6m', resolution: '120' },\n      { text: '3m', resolution: '60' },\n      { text: '1m', resolution: '30' },\n      { text: '5d', resolution: '5' },\n      { text: '1d', resolution: '1' },\n    ],\n    client_id: '0',\n    user_id: '0',\n    charts_storage_api_version: '1.0',\n    favorites: { intervals: [], chartTypes: [] },\n  };\nlet n = !1;\nfunction o() {\n  return 'CL v22.032 (internal id e2a841ff @ 2022-07-06T11:53:07.702Z)';\n}\nconst s = class {\n  constructor(o) {\n    if (\n      ((this._id = `tradingview_${((1048576 * (1 + Math.random())) | 0)\n        .toString(16)\n        .substring(1)}`),\n      (this._ready = !1),\n      (this._readyHandlers = []),\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\n      !o.datafeed)\n    )\n      throw new Error('Datafeed is not defined');\n    if (((this._options = e(i, o)), o.preset)) {\n      const e = t[o.preset];\n      e\n        ? (void 0 !== this._options.disabled_features\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\n                e.disabled_features,\n              ))\n            : (this._options.disabled_features = e.disabled_features),\n          void 0 !== this._options.enabled_features\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\n                e.enabled_features,\n              ))\n            : (this._options.enabled_features = e.enabled_features))\n        : console.warn('Unknown preset: `' + o.preset + '`');\n    }\n    'Dark' === this._options.theme &&\n      void 0 === this._options.loading_screen &&\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\n      this._options.debug &&\n        (n ||\n          ((n = !0),\n          console.log(\n            'Using CL v22.032 (internal id e2a841ff @ 2022-07-06T11:53:07.702Z)',\n          ))),\n      this._create();\n  }\n  onChartReady(e) {\n    this._ready ? e.call(this) : this._readyHandlers.push(e);\n  }\n  headerReady() {\n    return this._innerWindowLoaded.then(() =>\n      this._innerWindow().headerReady(),\n    );\n  }\n  onGrayedObjectClicked(e) {\n    this._doWhenInnerApiLoaded((t) => {\n      t.onGrayedObjectClicked(e);\n    });\n  }\n  onShortcut(e, t) {\n    this._doWhenInnerWindowLoaded((i) => {\n      i.createShortcutAction(e, t);\n    });\n  }\n  subscribe(e, t) {\n    this._doWhenInnerApiLoaded((i) => {\n      i.subscribe(e, t);\n    });\n  }\n  unsubscribe(e, t) {\n    this._doWhenInnerApiLoaded((i) => {\n      i.unsubscribe(e, t);\n    });\n  }\n  chart(e) {\n    return this._innerAPI().chart(e);\n  }\n  getLanguage() {\n    return this._options.locale;\n  }\n  setSymbol(e, t, i) {\n    this._innerAPI().changeSymbol(e, t, i);\n  }\n  remove() {\n    window.removeEventListener('resize', this._onWindowResize),\n      this._readyHandlers.splice(0, this._readyHandlers.length),\n      delete window[this._id],\n      this._iFrame.parentNode &&\n        this._iFrame.parentNode.removeChild(this._iFrame);\n  }\n  closePopupsAndDialogs() {\n    this._doWhenInnerApiLoaded((e) => {\n      e.closePopupsAndDialogs();\n    });\n  }\n  selectLineTool(e) {\n    this._innerAPI().selectLineTool(e);\n  }\n  selectedLineTool() {\n    return this._innerAPI().selectedLineTool();\n  }\n  save(e) {\n    this._innerAPI().saveChart(e);\n  }\n  load(e, t) {\n    this._innerAPI().loadChart({ json: e, extendedData: t });\n  }\n  getSavedCharts(e) {\n    this._innerAPI().getSavedCharts(e);\n  }\n  loadChartFromServer(e) {\n    this._innerAPI().loadChartFromServer(e);\n  }\n  saveChartToServer(e, t, i) {\n    this._innerAPI().saveChartToServer(e, t, i);\n  }\n  removeChartFromServer(e, t) {\n    this._innerAPI().removeChartFromServer(e, t);\n  }\n  onContextMenu(e) {\n    this._doWhenInnerApiLoaded((t) => {\n      t.onContextMenu(e);\n    });\n  }\n  createButton(e) {\n    return this._innerWindow().createButton(e);\n  }\n  createDropdown(e) {\n    return this._innerWindow().createDropdown(e);\n  }\n  showNoticeDialog(e) {\n    this._doWhenInnerApiLoaded((t) => {\n      t.showNoticeDialog(e);\n    });\n  }\n  showConfirmDialog(e) {\n    this._doWhenInnerApiLoaded((t) => {\n      t.showConfirmDialog(e);\n    });\n  }\n  showLoadChartDialog() {\n    this._innerAPI().showLoadChartDialog();\n  }\n  showSaveAsChartDialog() {\n    this._innerAPI().showSaveAsChartDialog();\n  }\n  symbolInterval() {\n    return this._innerAPI().getSymbolInterval();\n  }\n  mainSeriesPriceFormatter() {\n    return this._innerAPI().mainSeriesPriceFormatter();\n  }\n  getIntervals() {\n    return this._innerAPI().getIntervals();\n  }\n  getStudiesList() {\n    return this._innerAPI().getStudiesList();\n  }\n  getStudyInputs(e) {\n    return this._innerAPI().getStudyInputs(e);\n  }\n  addCustomCSSFile(e) {\n    this._innerWindow().addCustomCSSFile(e);\n  }\n  applyOverrides(t) {\n    (this._options = e(this._options, { overrides: t })),\n      this._doWhenInnerWindowLoaded((e) => {\n        e.applyOverrides(t);\n      });\n  }\n  applyStudiesOverrides(e) {\n    this._doWhenInnerWindowLoaded((t) => {\n      t.applyStudiesOverrides(e);\n    });\n  }\n  watchList() {\n    return this._innerAPI().watchlist();\n  }\n  news() {\n    return this._innerAPI().news();\n  }\n  widgetbar() {\n    return this._innerAPI().widgetbar();\n  }\n  activeChart() {\n    return this._innerAPI().activeChart();\n  }\n  chartsCount() {\n    return this._innerAPI().chartsCount();\n  }\n  layout() {\n    return this._innerAPI().layout();\n  }\n  setLayout(e) {\n    this._innerAPI().setLayout(e);\n  }\n  layoutName() {\n    return this._innerAPI().layoutName();\n  }\n  changeTheme(e, t) {\n    return this._innerWindow().changeTheme(e, t);\n  }\n  getTheme() {\n    return this._innerWindow().getTheme();\n  }\n  takeScreenshot() {\n    this._doWhenInnerApiLoaded((e) => {\n      e.takeScreenshot();\n    });\n  }\n  lockAllDrawingTools() {\n    return this._innerAPI().lockAllDrawingTools();\n  }\n  hideAllDrawingTools() {\n    return this._innerAPI().hideAllDrawingTools();\n  }\n  drawOnAllCharts(e) {\n    this._innerAPI().drawOnAllCharts(e);\n  }\n  magnetEnabled() {\n    return this._innerAPI().magnetEnabled();\n  }\n  magnetMode() {\n    return this._innerAPI().magnetMode();\n  }\n  undoRedoState() {\n    return this._innerAPI().undoRedoState();\n  }\n  setIntervalLinkingEnabled(e) {\n    this._innerAPI().setIntervalLinkingEnabled(e);\n  }\n  setTimeFrame(e) {\n    this._innerAPI().setTimeFrame(e);\n  }\n  symbolSync() {\n    return this._innerAPI().symbolSync();\n  }\n  intervalSync() {\n    return this._innerAPI().intervalSync();\n  }\n  crosshairSync() {\n    return this._innerAPI().crosshairSync();\n  }\n  timeSync() {\n    return this._innerAPI().timeSync();\n  }\n  getAllFeatures() {\n    return this._innerWindow().getAllFeatures();\n  }\n  clearUndoHistory() {\n    return this._innerAPI().clearUndoHistory();\n  }\n  undo() {\n    return this._innerAPI().undo();\n  }\n  redo() {\n    return this._innerAPI().redo();\n  }\n  startFullscreen() {\n    this._innerAPI().startFullscreen();\n  }\n  exitFullscreen() {\n    this._innerAPI().exitFullscreen();\n  }\n  takeClientScreenshot(e) {\n    return this._innerAPI().takeClientScreenshot(e);\n  }\n  navigationButtonsVisibility() {\n    return this._innerWindow().getNavigationButtonsVisibility();\n  }\n  paneButtonsVisibility() {\n    return this._innerWindow().getPaneButtonsVisibility();\n  }\n  dateFormat() {\n    return this._innerWindow().getDateFormat();\n  }\n  _innerAPI() {\n    return this._innerWindow().tradingViewApi;\n  }\n  _innerWindow() {\n    return this._iFrame.contentWindow;\n  }\n  _doWhenInnerWindowLoaded(e) {\n    this._ready\n      ? e(this._innerWindow())\n      : this._innerWindowLoaded.then(() => {\n          e(this._innerWindow());\n        });\n  }\n  _doWhenInnerApiLoaded(e) {\n    this._doWhenInnerWindowLoaded((t) => {\n      t.doWhenApiIsReady(() => e(this._innerAPI()));\n    });\n  }\n  _autoResizeChart() {\n    this._options.fullscreen &&\n      (this._iFrame.style.height = window.innerHeight + 'px');\n  }\n  _create() {\n    const e = this._render();\n    this._options.container_id &&\n      console.warn(\n        '`container_id` is now deprecated. Please use `container` instead to either still pass a string or an `HTMLElement`.',\n      );\n    const t = this._options.container_id || this._options.container,\n      i = 'string' == typeof t ? document.getElementById(t) : t;\n    if (null === i)\n      throw new Error(`There is no such element - #${this._options.container}`);\n    (i.innerHTML = e), (this._iFrame = i.querySelector(`#${this._id}`));\n    const n = this._iFrame;\n    (this._options.autosize || this._options.fullscreen) &&\n      ((n.style.width = '100%'),\n      this._options.fullscreen || (n.style.height = '100%')),\n      window.addEventListener('resize', this._onWindowResize),\n      this._onWindowResize(),\n      (this._innerWindowLoaded = new Promise((e) => {\n        const t = () => {\n          n.removeEventListener('load', t, !1), e();\n        };\n        n.addEventListener('load', t, !1);\n      })),\n      this._innerWindowLoaded.then(() => {\n        this._innerWindow().widgetReady(() => {\n          this._ready = !0;\n          for (const e of this._readyHandlers)\n            try {\n              e.call(this);\n            } catch (e) {\n              console.error(e);\n            }\n          this._innerWindow().initializationFinished();\n        });\n      });\n  }\n  _render() {\n    const e = window;\n    if (\n      ((e[this._id] = {\n        datafeed: this._options.datafeed,\n        customFormatters:\n          this._options.custom_formatters || this._options.customFormatters,\n        brokerFactory:\n          this._options.broker_factory || this._options.brokerFactory,\n        overrides: this._options.overrides,\n        studiesOverrides: this._options.studies_overrides,\n        tradingCustomization: this._options.trading_customization,\n        disabledFeatures: this._options.disabled_features,\n        enabledFeatures: this._options.enabled_features,\n        brokerConfig: this._options.broker_config || this._options.brokerConfig,\n        restConfig: this._options.restConfig,\n        favorites: this._options.favorites,\n        logo: this._options.logo,\n        numeric_formatting: this._options.numeric_formatting,\n        rss_news_feed: this._options.rss_news_feed,\n        newsProvider: this._options.news_provider,\n        loadLastChart: this._options.load_last_chart,\n        saveLoadAdapter: this._options.save_load_adapter,\n        loading_screen: this._options.loading_screen,\n        settingsAdapter: this._options.settings_adapter,\n        getCustomIndicators: this._options.custom_indicators_getter,\n        additionalSymbolInfoFields: this._options.additional_symbol_info_fields,\n        headerWidgetButtonsMode: this._options.header_widget_buttons_mode,\n        customTranslateFunction: this._options.custom_translate_function,\n        symbolSearchComplete: this._options.symbol_search_complete,\n        contextMenu: this._options.context_menu,\n        settingsOverrides: this._options.settings_overrides,\n      }),\n      this._options.saved_data)\n    )\n      (e[this._id].chartContent = { json: this._options.saved_data }),\n        this._options.saved_data_meta_info &&\n          (e[\n            this._id\n          ].chartContentExtendedData = this._options.saved_data_meta_info);\n    else if (!this._options.load_last_chart && !this._options.symbol)\n      throw new Error(\n        \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\n      );\n    const t =\n      (this._options.library_path || '') +\n      `${encodeURIComponent(\n        this._options.locale,\n      )}-tv-chart.e2a841ff.html#symbol=` +\n      encodeURIComponent(this._options.symbol || '') +\n      '&interval=' +\n      encodeURIComponent(this._options.interval) +\n      (this._options.timeframe\n        ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\n        : '') +\n      (this._options.toolbar_bg\n        ? '&toolbarbg=' +\n          encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\n        : '') +\n      (this._options.studies_access\n        ? '&studiesAccess=' +\n          encodeURIComponent(JSON.stringify(this._options.studies_access))\n        : '') +\n      '&widgetbar=' +\n      encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\n      (this._options.drawings_access\n        ? '&drawingsAccess=' +\n          encodeURIComponent(JSON.stringify(this._options.drawings_access))\n        : '') +\n      '&timeFrames=' +\n      encodeURIComponent(JSON.stringify(this._options.time_frames)) +\n      '&locale=' +\n      encodeURIComponent(this._options.locale) +\n      '&uid=' +\n      encodeURIComponent(this._id) +\n      '&clientId=' +\n      encodeURIComponent(String(this._options.client_id)) +\n      '&userId=' +\n      encodeURIComponent(String(this._options.user_id)) +\n      (this._options.charts_storage_url\n        ? '&chartsStorageUrl=' +\n          encodeURIComponent(this._options.charts_storage_url)\n        : '') +\n      (this._options.charts_storage_api_version\n        ? '&chartsStorageVer=' +\n          encodeURIComponent(this._options.charts_storage_api_version)\n        : '') +\n      (this._options.custom_css_url\n        ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\n        : '') +\n      (this._options.custom_font_family\n        ? '&customFontFamily=' +\n          encodeURIComponent(this._options.custom_font_family)\n        : '') +\n      (this._options.auto_save_delay\n        ? '&autoSaveDelay=' +\n          encodeURIComponent(String(this._options.auto_save_delay))\n        : '') +\n      '&debug=' +\n      encodeURIComponent(String(this._options.debug)) +\n      (this._options.snapshot_url\n        ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\n        : '') +\n      (this._options.timezone\n        ? '&timezone=' + encodeURIComponent(this._options.timezone)\n        : '') +\n      (this._options.study_count_limit\n        ? '&studyCountLimit=' +\n          encodeURIComponent(String(this._options.study_count_limit))\n        : '') +\n      (this._options.symbol_search_request_delay\n        ? '&ssreqdelay=' +\n          encodeURIComponent(String(this._options.symbol_search_request_delay))\n        : '') +\n      (this._options.compare_symbols\n        ? '&compareSymbols=' +\n          encodeURIComponent(JSON.stringify(this._options.compare_symbols))\n        : '') +\n      (this._options.theme\n        ? '&theme=' + encodeURIComponent(String(this._options.theme))\n        : '') +\n      (this._options.header_widget_buttons_mode\n        ? '&header_widget_buttons_mode=' +\n          encodeURIComponent(String(this._options.header_widget_buttons_mode))\n        : '') +\n      (this._options.time_scale\n        ? '&time_scale=' +\n          encodeURIComponent(JSON.stringify(this._options.time_scale))\n        : '');\n    return (\n      '<iframe id=\"' +\n      this._id +\n      '\" name=\"' +\n      this._id +\n      '\"  src=\"' +\n      t +\n      '\"' +\n      (this._options.autosize || this._options.fullscreen\n        ? ''\n        : ' width=\"' +\n          this._options.width +\n          '\" height=\"' +\n          this._options.height +\n          '\"') +\n      ' title=\"Financial Chart\" frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\n    );\n  }\n};\n(window.TradingView = window.TradingView || {}),\n  (window.TradingView.version = o);\nexport { o as version, s as widget };\n","const CHARTS_KEY = 'tradingviewCharts';\nconst STUDIES_KEY = 'tradingviewStudies';\n\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\n\nexport function getAllCharts() {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  return new Promise((resolve) => resolve(charts));\n}\n\nexport function removeChart(chartId) {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== chartId);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\n  return new Promise<void>((resolve) => resolve());\n}\n\nexport function saveChart(chartData) {\n  let { content, ...info } = chartData;\n  if (!info.id) {\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\n  }\n  // @ts-ignore\n  info.timestamp = new Date() - 0;\n  content = JSON.parse(content);\n  content['content'] = JSON.parse(content['content']);\n  // Remove \"study_Overlay\" i.e the indexes\n  try {\n    for (\n      var i = 0;\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\n      i++\n    ) {\n      if (\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\n        'study_Overlay'\n      ) {\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  content['content'] = JSON.stringify(content['content']);\n  content = JSON.stringify(content);\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== info.id);\n  charts.push(info);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\n\n  return new Promise((resolve) => resolve(info.id));\n}\n\nexport function getChartContent(chartId) {\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\n  return new Promise((resolve) => resolve(content));\n}\n\nexport function getAllStudyTemplates() {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  return new Promise((resolve) => resolve(studies));\n}\n\nexport function removeStudyTemplate({ name }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== name);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve());\n}\n\nexport function saveStudyTemplate({ content, ...info }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== info.name);\n  studies.push(info);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\n  return new Promise((resolve) => resolve());\n}\n\nexport function getStudyTemplateContent({ name }) {\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve(content));\n}\n","import * as React from 'react';\nimport './index.css';\nimport {\n  widget,\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n} from '../../charting_library';\nimport {\n  DEFAULT_MARKET_NAME,\n  useMarket,\n  USE_MARKETS,\n} from '../../utils/markets';\nimport * as saveLoadAdapter from './saveLoadAdapter';\nimport { flatten } from '../../utils/utils';\nimport { BONFIDA_DATA_FEED } from '../../utils/bonfidaConnector';\n\nexport interface ChartContainerProps {\n  symbol: ChartingLibraryWidgetOptions['symbol'];\n  interval: ChartingLibraryWidgetOptions['interval'];\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\n\n  // BEWARE: no trailing slash is expected in feed URL\n  // datafeed: any;\n  datafeedUrl: string;\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\n  clientId: ChartingLibraryWidgetOptions['client_id'];\n  userId: ChartingLibraryWidgetOptions['user_id'];\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\n  autosize: ChartingLibraryWidgetOptions['autosize'];\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\n  containerId: ChartingLibraryWidgetOptions['container_id'];\n  theme: string;\n}\n\nexport interface ChartContainerState {}\n\nexport const TVChartContainer = () => {\n  // let datafeed = useTvDataFeed();\n  const defaultProps: ChartContainerProps = {\n    symbol: DEFAULT_MARKET_NAME,\n    // @ts-ignore\n    interval: '60',\n    auto_save_delay: 5,\n    theme: 'Dark',\n    containerId: 'tv_chart_container',\n    // datafeed: datafeed,\n    libraryPath: '/charting_library/',\n    chartsStorageApiVersion: '1.1',\n    clientId: 'tradingview.com',\n    userId: 'public_user_id',\n    fullscreen: false,\n    autosize: true,\n    datafeedUrl: BONFIDA_DATA_FEED,\n    studiesOverrides: {},\n  };\n\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\n  const { market } = useMarket();\n\n  const chartProperties = JSON.parse(\n    localStorage.getItem('chartproperties') || '{}',\n  );\n\n  React.useEffect(() => {\n    const savedProperties = flatten(chartProperties, {\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\n    });\n\n    const widgetOptions: ChartingLibraryWidgetOptions = {\n      symbol:\n        USE_MARKETS.find(\n          (m) => m.address.toBase58() === market?.publicKey.toBase58(),\n        )?.name || DEFAULT_MARKET_NAME,\n      // BEWARE: no trailing slash is expected in feed URL\n      // tslint:disable-next-line:no-any\n      // @ts-ignore\n      // datafeed: datafeed,\n      // @ts-ignore\n      datafeed: new (window as any).Datafeeds.UDFCompatibleDatafeed(\n        defaultProps.datafeedUrl,\n      ),\n      interval: defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\n      container_id: defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\n      library_path: defaultProps.libraryPath as string,\n      auto_save_delay: 5,\n\n      locale: 'en',\n      disabled_features: ['use_localstorage_for_settings'],\n      enabled_features: ['study_templates'],\n      load_last_chart: true,\n      client_id: defaultProps.clientId,\n      user_id: defaultProps.userId,\n      fullscreen: defaultProps.fullscreen,\n      autosize: defaultProps.autosize,\n      studies_overrides: defaultProps.studiesOverrides,\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\n      overrides: {\n        ...savedProperties,\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\n      },\n      // @ts-ignore\n      save_load_adapter: saveLoadAdapter,\n      settings_adapter: {\n        initialSettings: {\n          'trading.orderPanelSettingsBroker': JSON.stringify({\n            showRelativePriceControl: false,\n            showCurrencyRiskInQty: false,\n            showPercentRiskInQty: false,\n            showBracketsInCurrency: false,\n            showBracketsInPercent: false,\n          }),\n          // \"proterty\"\n          'trading.chart.proterty':\n            localStorage.getItem('trading.chart.proterty') ||\n            JSON.stringify({\n              hideFloatingPanel: 1,\n            }),\n          'chart.favoriteDrawings':\n            localStorage.getItem('chart.favoriteDrawings') ||\n            JSON.stringify([]),\n          'chart.favoriteDrawingsPosition':\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\n            JSON.stringify({}),\n        },\n        setValue: (key, value) => {\n          localStorage.setItem(key, value);\n        },\n        removeValue: (key) => {\n          localStorage.removeItem(key);\n        },\n      },\n    };\n\n    const tvWidget = new widget(widgetOptions);\n\n    tvWidget.onChartReady(() => {\n      tvWidgetRef.current = tvWidget;\n      tvWidget\n        // @ts-ignore\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [market, tvWidgetRef.current]);\n\n  return <div id={defaultProps.containerId} className={'TVChartContainer'} />;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport Orderbook from '../components/Orderbook';\nimport UserInfoTable from '../components/UserInfoTable';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport {\n  getMarketInfos,\n  getTradePageUrl,\n  MarketProvider,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport LinkAddress from '../components/LinkAddress';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport { notify } from '../utils/notifications';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\nimport { TVChartContainer } from '../components/TradingView';\n// Use following stub for quick setup without the TradingView private dependency\n// function TVChartContainer() {\n//   return <></>;\n// }\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} — DEX | Onespace` : 'DEX | Onespace';\n  }, [marketName]);\n\n  const changeOrderRef = useRef<\n    ({ size, price }: { size?: number; price?: number }) => void\n  >();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const width = dimensions?.width;\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else if (width < 1450) {\n      return <RenderSmall {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={markets}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#5ab7f7' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#5ab7f7' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const extractBase = (a) => a.split('/')[0];\n  const extractQuote = (a) => a.split('/')[1];\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      style={{ width: 200 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {markets\n          .sort((a, b) =>\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\n              ? -1\n              : extractQuote(a.name) !== 'USDT' &&\n                extractQuote(b.name) === 'USDT'\n              ? 1\n              : 0,\n          )\n          .sort((a, b) =>\n            extractBase(a.name) < extractBase(b.name)\n              ? -1\n              : extractBase(a.name) > extractBase(b.name)\n              ? 1\n              : 0,\n          )\n          .map(({ address, name, deprecated }, i) => (\n            <Option\n              value={address.toBase58()}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              {name} {deprecated ? ' (Deprecated)' : null}\n            </Option>\n          ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col flex=\"auto\" style={{ height: '50vh' }}>\n        <Row style={{ height: '100%' }}>\n          <TVChartContainer />\n        </Row>\n        <Row style={{ height: '70%' }}>\n          <UserInfoTable />\n        </Row>\n      </Col>\n      <Col flex={'360px'} style={{ height: '100%' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n      <Col\n        flex=\"400px\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row style={{ height: '30vh' }}>\n        <TVChartContainer />\n      </Row>\n      <Row\n        style={{\n          height: '900px',\n        }}\n      >\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <Orderbook\n            smallScreen={true}\n            depth={13}\n            onPrice={onPrice}\n            onSize={onSize}\n          />\n        </Col>\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n        <Col\n          flex=\"400px\"\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row style={{ height: '50vh' }}>\n        <TVChartContainer />\n      </Row>\n      <Row>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n      </Row>\n      <Row\n        style={{\n          height: '500px',\n        }}\n      >\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\n          <TradesTable smallScreen={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Col flex=\"auto\">\n          <UserInfoTable />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import { Button, Dropdown, Menu, Modal } from 'antd';\nimport React, { useState } from 'react';\n\nimport LinkAddress from './LinkAddress';\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nexport default function WalletConnect() {\n  const {\n    connected,\n    publicKey,\n    connect,\n    disconnect,\n    select,\n    wallet,\n    wallets,\n  } = useWallet();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const publicKeyString = publicKey?.toBase58() || '';\n\n  const menu = (\n    <Menu>\n      {connected && <LinkAddress shorten={true} address={publicKeyString} />}\n      <Menu.Item\n        key=\"3\"\n        onClick={() => {\n          setIsModalVisible((v) => !v);\n        }}\n      >\n        Change Wallet\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <>\n      <Dropdown.Button\n        onClick={\n          wallet\n            ? connected\n              ? disconnect\n              : connect\n            : () => {\n                setIsModalVisible(true);\n              }\n        }\n        overlay={menu}\n      >\n        {connected ? 'Disconnect' : 'Connect'}\n      </Dropdown.Button>\n      <Modal\n        title=\"Select Wallet\"\n        okText=\"Connect\"\n        visible={isModalVisible}\n        okButtonProps={{ style: { display: 'none' } }}\n        onCancel={() => {\n          setIsModalVisible(false);\n        }}\n        width={400}\n      >\n        {wallets.map(({ adapter }) => {\n          const onClick = function () {\n            select(adapter.name);\n            setIsModalVisible(false);\n          };\n\n          return (\n            <Button\n              size=\"large\"\n              key={adapter.name}\n              type={adapter.name === wallet?.adapter.name ? 'primary' : 'ghost'}\n              onClick={onClick}\n              icon={\n                <img\n                  alt={`${adapter.name}`}\n                  width={20}\n                  height={20}\n                  src={adapter.icon}\n                  style={{ marginRight: 8 }}\n                />\n              }\n              style={{\n                display: 'block',\n                width: '100%',\n                textAlign: 'left',\n                marginBottom: 8,\n              }}\n            >\n              {adapter.name}\n            </Button>\n          );\n        })}\n      </Modal>\n    </>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!wallet) {\n        notify({\n          message: 'Wallet not connected',\n          description: 'Wallet not connected',\n          type: 'error',\n        });\n        return;\n      }\n\n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://solscan.io/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet, Wallet } from '@solana/wallet-adapter-react';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #5ab7f7;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && wallet && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet?: Wallet;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport { Switch, Typography } from 'antd';\nimport { usePreferences } from '../utils/preferences';\n\nconst { Paragraph } = Typography;\n\nexport default function Settings({ autoApprove }) {\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\n\n  return (\n    <div>\n      <Switch\n        style={{ marginRight: 10 }}\n        disabled={!autoApprove}\n        checked={autoApprove && autoSettleEnabled}\n        onChange={setAutoSettleEnabled}\n      />{' '}\n      Auto settle\n      {!autoApprove && (\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\n          To use auto settle, first enable auto approval in your wallet\n        </Paragraph>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import React, { useRef, useState } from 'react';\nimport { Select, Typography } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport apps from '@project-serum/awesome-serum';\n\nconst { Option } = Select;\n\nconst appsAndTokens = apps.concat(\n  TOKEN_MINTS.map((mint) => {\n    return {\n      name: `${mint.name} SPL`,\n      url: `https://solscan.io/address/${mint.address.toBase58()}`,\n      description: `${mint.name} SPL token`,\n      icon: '',\n      tags: [\n        'token',\n        'blockchain',\n        'solana',\n        'spl',\n        'solana',\n        mint.address.toBase58(),\n      ],\n    };\n  }),\n);\n\ninterface App {\n  name: string;\n  url: string;\n  description: string;\n  tags: string[];\n}\n\nexport default function AppSearch(props) {\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n\n  const matchApp = (searchString: string, app: App) => {\n    const lowerSearchStr = searchString.toLowerCase();\n    return (\n      app.name.toLowerCase().includes(lowerSearchStr) ||\n      app.tags.some(\n        (tag) =>\n          tag.toLowerCase().includes(lowerSearchStr) ||\n          lowerSearchStr.includes(tag.toLowerCase()),\n      )\n    );\n  };\n\n  const handleSearch = (value) => {\n    setSearchValue(value === '' ? undefined : value);\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\n    setSearchMatches(filteredApps);\n  };\n\n  const handleSelect = (value, option) => {\n    window.open(option.href, '_blank');\n    handleClear();\n  };\n\n  const handleClear = () => {\n    setSearchMatches([]);\n    setSearchValue(undefined);\n  };\n\n  const options = searchMatches.map((d) => (\n    <Option key={d.name} value={d.name} href={d.url}>\n      <h3>{d.name}</h3>\n      <Typography.Text type=\"secondary\">\n        {d.url.replace('https://', '')}\n      </Typography.Text>\n    </Option>\n  ));\n\n  const ref = useRef<any>();\n  return (\n    <Select\n      ref={ref}\n      showSearch\n      allowClear\n      value={searchValue}\n      placeholder={\n        props.focussed || props.focussed === undefined\n          ? 'Search for dex, swap, wallet, token...'\n          : ''\n      }\n      onSearch={handleSearch}\n      onClear={handleClear}\n      onSelect={handleSelect}\n      onFocus={props.onFocus}\n      onBlur={() => {\n        props.onBlur();\n        handleClear();\n      }}\n      notFoundContent={null} // todo: make this search history\n      style={{\n        width: props.width || '300px',\n        transition: props.focussed ? 'width 0.1s ease 0.1s' : '',\n      }}\n      dropdownStyle={{\n        width: props.width || '300px',\n      }}\n      dropdownMatchSelectWidth={false}\n      suffixIcon={\n        <SearchOutlined onClick={() => ref.current && ref.current.focus()} />\n      }\n      filterOption={false}\n    >\n      {options}\n    </Select>\n  );\n}\n","import {\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport Settings from './Settings';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport AppSearch from './AppSearch';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #111318;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #5ab7f7;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 50px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/more':\n    'https://1space.me/',\n  '/staking': 'https://coinstake.1space.me/',\n  '/docs': 'https://docs.1space.me/',\n  '/nft': 'https://nft.1space.me/',\n  '/market-data': 'https://openserum.io/',\n  '/explorer': 'https://solscan.io',\n \n  '/swap': 'https://app.1space.me/',\n};\n\nexport default function TopBar() {\n  const { connected, wallet } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getBlockTime(0)\n        .then(() => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {''}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n          <Menu.Item key={tradePageUrl} style={{ margin: '0 10px 0 20px' }}>\n            TRADE\n          </Menu.Item>\n          {connected && (!searchFocussed || location.pathname === '/balances') && (\n            <Menu.Item key=\"/balances\" style={{ margin: '0 10px' }}>\n              BALANCES\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/orders') && (\n            <Menu.Item key=\"/orders\" style={{ margin: '0 10px' }}>\n              ORDERS\n            </Menu.Item>\n          )}\n          {connected && (!searchFocussed || location.pathname === '/convert') && (\n            <Menu.Item key=\"/convert\" style={{ margin: '0 10px' }}>\n              CONVERT\n            </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/swap') && (\n            <Menu.Item key=\"/swap\" style={{ margin: '0 10px' }}>\n            <a\n              href={EXTERNAL_LINKS['/swap']}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              SWAP\n            </a>\n          </Menu.Item>\n          )}\n          {(!searchFocussed || location.pathname === '/list-new-market') && (\n            <Menu.Item key=\"/list-new-market\" style={{ margin: '0 10px' }}>\n              ADD MARKET\n            </Menu.Item>\n          )}\n          {!searchFocussed && (\n            <Menu.SubMenu\n              title=\"....\"\n              onTitleClick={() =>\n                window.open(EXTERNAL_LINKS['/more'], '_blank')\n              }\n              style={{ margin: '0 0px 0 10px' }}\n            >\n              <Menu.Item key=\"/staking\">\n                <a\n                  href={EXTERNAL_LINKS['/staking']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  STAKING\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/nft\">\n                <a\n                  href={EXTERNAL_LINKS['/nft']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  NFT\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/docs\">\n                <a\n                  href={EXTERNAL_LINKS['/docs']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  DOCS\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/market-data\">\n                <a\n                  href={EXTERNAL_LINKS['/market-data']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  MARKET DATA\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"/explorer\">\n                <a\n                  href={EXTERNAL_LINKS['/explorer']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SOLANA EXPLORER\n                </a>\n              </Menu.Item>\n              \n            </Menu.SubMenu>\n          )}\n        </Menu>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            paddingRight: 5,\n          }}\n        >\n          <AppSearch\n            onFocus={() => setSearchFocussed(true)}\n            onBlur={() => setSearchFocussed(false)}\n            focussed={searchFocussed}\n            width={searchFocussed ? '350px' : '35px'}\n          />\n        </div>\n        <div>\n          <Row\n            align=\"middle\"\n            style={{ paddingLeft: 5, paddingRight: 5 }}\n            gutter={16}\n          >\n            <Col>\n              <PlusCircleOutlined\n                style={{ color: '#5ab7f7' }}\n                onClick={() => setAddEndpointVisible(true)}\n              />\n            </Col>\n            <Col>\n              <Popover\n                content={endpoint}\n                placement=\"bottomRight\"\n                title=\"URL\"\n                trigger=\"hover\"\n              >\n                <InfoCircleOutlined style={{ color: '#5ab7f7' }} />\n              </Popover>\n            </Col>\n            <Col>\n              <Select\n                onSelect={setEndpoint}\n                value={endpoint}\n                style={{ marginRight: 8, width: '150px' }}\n              >\n                {availableEndpoints.map(({ name, endpoint }) => (\n                  <Select.Option value={endpoint} key={endpoint}>\n                    {name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n        </div>\n        {connected && (\n          <div>\n            <Popover\n              content={\n                <Settings autoApprove={(wallet?.adapter as any).autoApprove} />\n              }\n              placement=\"bottomRight\"\n              title=\"Settings\"\n              trigger=\"click\"\n            >\n              <Button style={{ marginRight: 8 }}>\n                <SettingOutlined />\n                Settings\n              </Button>\n            </Popover>\n          </div>\n        )}\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","export const helpUrls = {\n  customerSupport: 'https://t.me/onespaceEN',\n  customerSupportZh: 'https://t.me/onespaceEN',\n  contactEmail: 'mailto:team@1space.me',\n  discord: 'https://discord.com/invite/RacHhzcS7U',\n  telegram: 'https://t.me/onespaceEN',\n  github: 'https://github.com/Onespace-Project',\n  twitter: 'https://twitter.com/1space_me',\n  developerResources: 'https://github.com/openbook-dex',\n  solanaBeach: 'https://solanabeach.io',\n};\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nimport { helpUrls } from './HelpUrls';\nimport { useReferrer } from '../utils/referrer';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: 'OpenBook',\n    link: helpUrls.developerResources,\n  },\n  { description: 'Discord', link: helpUrls.discord },\n  { description: 'Telegram', link: helpUrls.telegram },\n  { description: 'GitHub', link: helpUrls.github },\n  { description: 'Twitter', link: helpUrls.twitter },\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n  const { refCode, allowRefLink } = useReferrer();\n  return (\n    <Footer\n      style={{\n        height: '55px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      {refCode && allowRefLink && (\n        <Row justify=\"center\">Your referrer is {refCode}</Row>\n      )}\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React, { useEffect } from 'react';\nimport TopBar from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nimport { useReferrer } from '../utils/referrer';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { notify } from '../utils/notifications';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  const { refCode, setRefCode, allowRefLink } = useReferrer();\n  const { search } = useLocation();\n  const parsed = queryString.parse(search);\n\n  useEffect(() => {\n    if (!!parsed.refCode && parsed.refCode !== refCode && allowRefLink) {\n      notify({ message: `New referrer ${parsed.refCode} added` });\n      setRefCode(parsed.refCode);\n    }\n  }, [parsed, refCode, setRefCode, allowRefLink]);\n\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\n// const FAKE_POOL = \"3FE2g3cadTJjN3C7gNRavwnv7Yh9Midq7h9KgTVUE7tR\"\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { connected, publicKey, wallet } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected && publicKey) {\n      setAdminAddress(publicKey.toBase58());\n    }\n  }, [publicKey, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit || !publicKey || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#5ab7f7' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport assert from 'assert';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { connected, publicKey, wallet } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      assert(publicKey, 'Expected `publicKey` to be non-null');\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({\n        connection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        transaction,\n        signers,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://solscan.io/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport { BaseSignerWalletAdapter } from '@solana/wallet-adapter-base';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({\n        connection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        transaction,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({\n        connection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        transaction,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { connected, publicKey } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress)) && publicKey) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { connected, publicKey } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      if (!publicKey) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { connected, publicKey } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      if (!publicKey) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected || !wallet) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({\n        connection,\n        wallet: wallet.adapter as BaseSignerWalletAdapter,\n        transaction,\n        signers,\n      });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { publicKey } = useWallet();\n\n  if (poolInfo && mintInfo && publicKey) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {poolInfo.state.adminKey?.equals(publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { Suspense, useMemo } from 'react';\nimport './App.less';\nimport { ConnectionProvider, useConnectionConfig } from './utils/connection';\nimport { WalletProvider } from '@solana/wallet-adapter-react';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { PreferencesProvider } from './utils/preferences';\nimport { ReferrerProvider } from './utils/referrer';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport {\n  SolletExtensionWalletAdapter,\n  SolletWalletAdapter,\n} from '@solana/wallet-adapter-sollet';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { MathWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\n\nfunction AppImpl() {\n  const { endpoint } = useConnectionConfig();\n  const network = useMemo(() => endpoint as WalletAdapterNetwork, [endpoint]);\n  const wallets = useMemo(\n    () => [\n      new SolletWalletAdapter({ network }),\n      new SolletExtensionWalletAdapter({ network }),\n      new LedgerWalletAdapter(),\n      new SolflareWalletAdapter({ network }),\n      new PhantomWalletAdapter(),\n      new MathWalletAdapter(),\n    ],\n    [network],\n  );\n  return (\n    <ReferrerProvider>\n      <WalletProvider autoConnect wallets={wallets}>\n        <PreferencesProvider>\n          <Suspense fallback={() => <Spin size=\"large\" />}>\n            <Routes />\n          </Suspense>\n        </PreferencesProvider>\n      </WalletProvider>\n    </ReferrerProvider>\n  );\n}\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <AppImpl />\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}